1.聊天机器人设计思路
整体调用了阿里ChatUI接口，设置不同参数产生不同效果。
例如可以设置initialMessages参数修改机器人初始化消息，设置defaultQuickReplies参数修改默认的快捷短语等
2.无障碍模式设计思路
主要实现了以下几个功能：
1）放大：通过设置页面css中的zoom参数，每次点击方法，zoom+0.1
2）缩小：通过设置页面css中的zoom参数，每次点击方法，zoom-0.1
3）辅助线：在页面上添加两条水平和垂直的线，交点为鼠标位置，监听鼠标移动位置，跟随鼠标移动
4）大鼠标：存储大鼠标svg图片，通过设置页面css中的cursor属性，修改为自定义的svg图
5）高对比度：通过设置页面css的filter属性，修改invert(100%)
6）重置：将所有效果清除
7）关闭：将所有效果清除并将工具栏关闭
注意点：由于无障碍工具栏需要独立于整个页面，因此需要在_app.js中进行设置，将修改功能都作用在主页面上，而不影响工具栏变化。
3.后端接口设计
依赖NextJS的api/mock，可以在[operate].js中设计接口，主要包括以下几个接口：
1）注册接口register
请求方式：post
请求路径：localhost:3000/api/mock/register
请求体：id（通过时间戳生成），username，gender，email_address，trip_declaration，password
响应格式：
①注册成功
status：200
data：userinfo（用户的所有信息）
message：注册成功
②用户名已存在
status：202
data：userinfo（用户的所有信息）
message：用户名已存在

2）登录接口login
请求方式：post
请求路径：localhost:3000/api/mock/login
请求体：username，password
响应格式：
①登陆成功
status：200
data：userinfo（用户的所有信息）
message：登陆成功
②密码错误
status：202
message：密码错误
③用户不存在
status：203
message：用户不存在
注意点：登录时判断是否选择记住我，将token存入localstorage

3）订单信息bookerinfo
请求方式：post
请求路径：localhost:3000/api/mock/bookerinfo
请求体：token
响应格式：
status：200
data：userinfo（用户的所有信息）
注意点：发请求前需要判断是否有token，如果没有需要登陆

4）预订酒店bookhotel
请求方式：post
请求路径：localhost:3000/api/mock/bookhotel
请求体：token，id（酒店订单号，时间戳生成），username（订单所属用户），userid，destination（目的地）checkinDate（入住日期），checkoutDate（离开日期），RoomCount（房间数），AdultCount（成人数），ChildCount: （儿童数），HotelLevel（酒店星级），description（备注）
响应格式：
status：200
message：预订成功
注意点：发请求前需要判断是否有token，如果没有需要登陆

5）预订机票bookplane
请求方式：post
请求路径：localhost:3000/api/mock/bookplane
请求体：token，id（机票订单号，时间戳生成），username（订单所属用户），userid，StartPlace（出发地），EndPlace（目的地），Triptype（旅程类型，单程，往返等），Zhifei（是否直飞），Type（机舱类型，经济舱等），StartDate（出发日期），EndDate（返程日期），AdultCount（成人数），ChildCount（儿童数），EnfantCount（婴儿数）
响应格式：
status：200
message：预订成功
注意点：发请求前需要判断是否有token，如果没有需要登陆

6）预订火车票booktrain
请求方式：post
请求路径：localhost:3000/api/mock/booktrain
请求体：token，id（火车票订单号，时间戳生成），username（订单所属用户），userid，StartPlace（出发地），EndPlace（目的地），Triptype（旅程类型，单程，往返等），StartDate（出发日期），EndDate（返程日期）
响应格式：
status：200
message：预订成功
注意点：发请求前需要判断是否有token，如果没有需要登陆

7）预订汽车/船票bookbusorboat
请求方式：post
请求路径：localhost:3000/api/mock/bookbusorboat
请求体：token，id（汽车/船票订单号，时间戳生成），username（订单所属用户），userid，StartPlace（出发地），EndPlace（目的地），Triptype（旅程类型，单程，往返等），StartDate（出发日期），BusOrBoat（判断是汽车票还是船票）
响应格式：
status：200
message：预订成功
注意点：发请求前需要判断是否有token，如果没有需要登陆；需要判断预订的是汽车票还是船票

8）删除订单deletebooker
请求方式：post
请求路径：localhost:3000/api/mock/deletebooker
请求体：token
响应格式：
status：200
message：删除成功
注意点：发请求前需要判断是否有token，如果没有需要登陆


